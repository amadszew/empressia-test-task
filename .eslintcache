[{"/home/amadeusz/empressia-test-task/src/index.js":"1","/home/amadeusz/empressia-test-task/src/reportWebVitals.js":"2","/home/amadeusz/empressia-test-task/src/App.js":"3","/home/amadeusz/empressia-test-task/src/components/Header/Header.js":"4","/home/amadeusz/empressia-test-task/src/components/Header/Nav/NavItem/NavItem.js":"5","/home/amadeusz/empressia-test-task/src/components/Header/Nav/Nav.js":"6","/home/amadeusz/empressia-test-task/src/components/Intro/Intro.js":"7","/home/amadeusz/empressia-test-task/src/components/Profit/Profit.js":"8","/home/amadeusz/empressia-test-task/src/components/Faq/Faq.js":"9","/home/amadeusz/empressia-test-task/src/components/Faq/Question.js":"10","/home/amadeusz/empressia-test-task/src/components/Opinions/Opinions.js":"11","/home/amadeusz/empressia-test-task/src/components/Opinions/Opinion.js":"12","/home/amadeusz/empressia-test-task/src/components/SeoIcons/SeoIcons.js":"13","/home/amadeusz/empressia-test-task/src/components/SeoIcons/SeoIconsBox.js":"14"},{"size":505,"mtime":1607113526843,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1607113225206,"results":"17","hashOfConfig":"16"},{"size":714,"mtime":1607859048054,"results":"18","hashOfConfig":"16"},{"size":882,"mtime":1607629613012,"results":"19","hashOfConfig":"16"},{"size":157,"mtime":1607187853540,"results":"20","hashOfConfig":"16"},{"size":629,"mtime":1607630456805,"results":"21","hashOfConfig":"16"},{"size":1244,"mtime":1607701586002,"results":"22","hashOfConfig":"16"},{"size":1053,"mtime":1607784929339,"results":"23","hashOfConfig":"16"},{"size":2068,"mtime":1607720241762,"results":"24","hashOfConfig":"16"},{"size":595,"mtime":1607720221842,"results":"25","hashOfConfig":"16"},{"size":3566,"mtime":1607861361082,"results":"26","hashOfConfig":"16"},{"size":1513,"mtime":1607807345588,"results":"27","hashOfConfig":"16"},{"size":1790,"mtime":1607861508090,"results":"28","hashOfConfig":"16"},{"size":422,"mtime":1607860641551,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"14gy9u1",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/amadeusz/empressia-test-task/src/index.js",[],["62","63"],"/home/amadeusz/empressia-test-task/src/reportWebVitals.js",[],"/home/amadeusz/empressia-test-task/src/App.js",[],"/home/amadeusz/empressia-test-task/src/components/Header/Header.js",[],"/home/amadeusz/empressia-test-task/src/components/Header/Nav/NavItem/NavItem.js",[],"/home/amadeusz/empressia-test-task/src/components/Header/Nav/Nav.js",[],"/home/amadeusz/empressia-test-task/src/components/Intro/Intro.js",[],"/home/amadeusz/empressia-test-task/src/components/Profit/Profit.js",[],"/home/amadeusz/empressia-test-task/src/components/Faq/Faq.js",["64"],"import React from 'react';\n\nimport Question from './Question';\n\nimport faqimg from '../../assets/images/illustration-faq.png';\n\nconst Faq = () => {\n\n  return (\n    <section className=\"faq\">\n      <div className=\"faq__info\">\n        <header className=\"faq__info__header\">\n          <h3 className=\"heading\">Najczęściej zadawane pytania</h3>\n        </header>\n        <button className=\"btn btn__ghost faq__info__btn\">Sprawdź całe FAQ</button>\n\n        <img src={faqimg} className=\"faq__info__img\" />\n      </div>\n      <div className=\"faq__questions\">\n        <Question\n          header={\"Jakie są korzyści teleporady lekarskiej na naszym serwisie?\"}\n          text={\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce a tortor eget lorem suscipit eleifend pharetra et dui. Praesent venenatis sem quis lorem pellentesque, ac lobortis massa pharetra.\"} />\n        <Question \n          header={\"Jak zrealizuję konsultację?\"}\n          text={\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce a tortor eget lorem suscipit eleifend pharetra et dui.\"} />\n        <Question\n          header={\"Czy jest możliwość odwołania wcześniej zarezerwowanej wizyty?\"}\n          text={\"W przypadkach losowych gdy nie mogą Państwo zrealizować wizyty w umówionym terminie istnieje możliwość zmiany daty wizyty bądź jej odwołania do 24h przed planowym terminem. Dokonają Państwo tego za pomocą linka przesłanego w potwierdzeniu rezerwacji na podany przez Państwa adres e-mail.\"} />\n        <Question\n          header={\"Co się dzieje w przypadku problemów technicznych?\"}\n          text={\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce a tortor eget lorem suscipit eleifend pharetra et dui. Praesent venenatis sem quis lorem pellentesque, ac lobortis massa pharetra.Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce a tortor eget lorem suscipit eleifend pharetra et dui. Praesent venenatis sem quis lorem pellentesque, ac lobortis massa pharetra.\"} />\n      </div>\n    </section>\n  );\n}\n\nexport default Faq;\n","/home/amadeusz/empressia-test-task/src/components/Faq/Question.js",[],"/home/amadeusz/empressia-test-task/src/components/Opinions/Opinions.js",["65"],"import React, { useState } from 'react';\n\nimport Opinion from './Opinion';\n\nconst Opinions = () => {\n\n  const [opinions, setOpinions] = useState([\n    {\n      id: 1,\n      date: '10 lipca 2020',\n      score: '5',\n      comment: 'Polecam Pana dr. Wysłuchał wszystkiego i dokładnie wytłumaczył następny zadowolony pacjet. E-konsultacja to bardzo dobra forma wizyty gdy musimy zostać w domu.',\n      user: {\n        name: 'Jan',\n        avatar: false,\n      },\n    },\n    {\n      id: 2,\n      date: '10 lipca 2020',\n      score: '4',\n      comment: 'Pan Michał to świetny lekarz, nie spieszył się, obejrzał znamię, wyjaśnił wszystko, lek ze mną omówił więc nie wypisywał w ciemno jak to robi reszta lekarzy. Polecam lekarza.',\n      user: {\n        name: 'Maria',\n        avatar: true,\n      },\n    },\n    {\n      id: 3,\n      date: '10 lipca 2020',\n      score: '5',\n      comment: 'Bardzo sympatyczny i kompetentny Pan Doktor. Udziela szczegółowych informacji, jest zaangażowany i leki, które mi przepisał zaczęły działać bardzo szybko…',\n      user: {\n        name: 'Gniewosz',\n        avatar: false,\n      },\n    },\n    {\n      id: 4,\n      date: '10 lipca 2020',\n      score: '1',\n      comment: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin nec ex non tellus semper euismod sed vitae orci. Proin tempus massa et libero ultricies volutpat. Nunc metus neque, hendrerit ut sollicitudin eget, volutpat eget leo. Mauris sapien justo, consequat sed vulputate ac, vulputate eget lacus. Donec ut lacus vel dui viverra elementum.',\n      user: {\n        name: 'Anonim',\n        avatar: false,\n      },\n    },\n    {\n      id: 5,\n      date: '10 lipca 2020',\n      score: '3',\n      comment: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin nec ex non tellus semper euismod sed vitae orci.',\n      user: {\n        name: 'Jagna',\n        avatar: false,\n      },\n    }\n  ]);\n\n  const scroll = i => {\n    const items = document.querySelectorAll('.opinions__list__item');\n\n    const dots = document.querySelectorAll('.opinions__dot');\n\n    items[i].scrollIntoView({\n      behavior: \"smooth\", \n      inline: \"start\"\n    });\n\n    console.log('items', items[i])\n    dots.forEach(dot => dot.classList.remove('active'));\n    dots[i].classList.add('active');\n  }\n\n  return (\n    <section className=\"opinions\">\n      <header className=\"opinions__header\">\n        <h3 className=\"heading\">Co mówią zadowoleni klienci</h3>\n      </header>\n\n      <div className=\"container\">\n        <div className=\"opinions__wrapper\">\n          <ul className=\"opinions__list\">\n            {opinions.map(opinion => (\n              <li className=\"opinions__list__item\" key={opinion.id}>\n                <Opinion \n                  date={opinion.date}\n                  score={opinion.score}\n                  comment={opinion.comment}\n                  userName={opinion.user.name}\n                  userAvatar={opinion.user.avatar} />\n              </li>\n            ))}\n          </ul>\n          <div className=\"opinions__dots\">\n            <button onClick={() => scroll(0)} className=\"opinions__dot active\"></button>\n            <button onClick={() => scroll(1)} className=\"opinions__dot\"></button>\n            <button onClick={() => scroll(2)} className=\"opinions__dot\"></button>\n            <button onClick={() => scroll(3)} className=\"opinions__dot\"></button>\n            <button onClick={() => scroll(4)} className=\"opinions__dot\"></button>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Opinions;\n","/home/amadeusz/empressia-test-task/src/components/Opinions/Opinion.js",["66"],"import React, { useState, useEffect } from 'react';\n\nimport starFilled from '../../assets/icons/ui/star-filled.svg';\nimport starEmpty from '../../assets/icons/ui/star-empty.svg';\n\nimport avatarDumb from '../../assets/icons/ui/icon.svg';\nimport avatarSpecial from '../../assets/icons/ui/avatar.jpg';\n\nconst Opinion = props => {\n  const [stars, setStars] = useState([]);\n\n  const {\n    date, \n    score, \n    comment, \n    userName,\n    userAvatar} = props;\n\n  const avatar = userAvatar ? avatarSpecial : avatarDumb;\n\n  const starsGenerator = () => {\n    const max = 5;\n\n    for (let i = 1; i <= max; i++) {\n      const fullstar = (\n        <span key={`full${i}`}>\n          <img src={starFilled} alt=\"filled star\" />\n        </span>\n      );\n      const emptystar = (\n        <span key={`empty${i}`}>\n          <img src={starEmpty} alt=\"empty star\" />\n        </span>\n      )\n\n      i <= score\n        ? setStars(prev => [...prev, fullstar])\n        : setStars(prev => [...prev, emptystar])\n    };\n  };\n\n  useEffect(() => {\n    starsGenerator()\n  }, []);\n\n  return (\n    <article className=\"opinion\">\n      <header className=\"opinion__header\">\n        <div className=\"opinion__score\">\n          {stars}\n        </div>\n        <div className=\"opinion__date\">{date}</div>\n      </header>\n\n      <p className=\"opinion__comment\">{comment}</p>\n\n      <div className=\"opinion__avatar\">\n        <img src={avatar} alt=\"avatar\" />\n        <span>{userName}</span>\n      </div>\n    </article>\n  );\n}\n\nexport default Opinion;\n","/home/amadeusz/empressia-test-task/src/components/SeoIcons/SeoIcons.js",[],"/home/amadeusz/empressia-test-task/src/components/SeoIcons/SeoIconsBox.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":17,"column":9,"nodeType":"73","endLine":17,"endColumn":56},{"ruleId":"74","severity":1,"message":"75","line":7,"column":20,"nodeType":"76","messageId":"77","endLine":7,"endColumn":31},{"ruleId":"78","severity":1,"message":"79","line":44,"column":6,"nodeType":"80","endLine":44,"endColumn":8,"suggestions":"81"},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'setOpinions' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'starsGenerator'. Either include it or remove the dependency array.","ArrayExpression",["84"],"no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},"Update the dependencies array to be: [starsGenerator]",{"range":"87","text":"88"},[1049,1051],"[starsGenerator]"]